[
  {
    "path": "posts/welcome/",
    "title": "Welcome to Arham's Blog",
    "description": "Welcome! This is my data science blog.   \nTopics: R, Python & SQL",
    "author": [
      {
        "name": "Arham Choudhury",
        "url": "https://arhamchoudhury.com/"
      }
    ],
    "date": "2022-08-01",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-08-01T17:04:19-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-08-01-inflation/",
    "title": "Inflation",
    "description": "Will US inflation last another year or more?",
    "author": [
      {
        "name": "Arham Choudhury",
        "url": "https://arhamchoudhury.com/"
      }
    ],
    "date": "2022-08-01",
    "categories": [],
    "contents": "\r\nExecutive Summary: The recent interest rate hikes appear to\r\nhave convinced forecasters and market participants that inflation will\r\nbe tamed to below 4% level within a year. Businesses and individuals\r\nshould see this as a sign of some relief.\r\n\r\n\r\nshow\r\n\r\nknitr::include_graphics(\"https://github.com/ArhamChoudhury/Blog_ArhamChoudhury/blob/main/images/inflation_exp.jpg?raw=true\")  \r\n\r\n\r\n\r\nNote: Dotted line represents expected inflation 1-year from now.\r\nSolid line shows actual reported CPI inflation.\r\nSources:\r\nActual Inflation: Bureau of Labor Statistics, data is Monthly, not\r\nseasonally adjusted Expected Inflation: Federal Reserve Bank of\r\nCleveland\r\nCode for Reproducing the data and chart\r\n\r\n\r\nshow\r\n\r\nlibrary(tidyverse)\r\nsuppressPackageStartupMessages(library(tidyquant))\r\nlibrary(timetk)\r\nlibrary(scales)\r\nlibrary(ggrepel)\r\n\r\n# Change vs 12 months ago Function\r\nYY <- function(x){\r\n  (x - lag(x,12))/lag(x,12)\r\n}\r\n\r\n# Actual Inflation\r\n# As of Aug 2022\r\n\r\nCPIAUCNS <- tq_get(\"CPIAUCNS\", get = \"economic.data\", from = \"2018-01-01\") %>%\r\n  summarise_by_time(\r\n    .date_var = date,\r\n    .by = \"month\",\r\n    CPI_allitems_monthly = mean(price, na.rm = T)) %>%\r\n  mutate(CPI_YY = YY(CPI_allitems_monthly)*100) %>%\r\n  na.omit() %>%\r\n  filter(date >= \"2022-01-01\") %>%\r\n  select(date, CPI_YY) %>%\r\n  rename(value = CPI_YY) %>%\r\n  mutate(type = \"Actual\")\r\nCPIAUCNS\r\n\r\n# A tibble: 7 × 3\r\n  date       value type  \r\n  <date>     <dbl> <chr> \r\n1 2022-01-01  7.48 Actual\r\n2 2022-02-01  7.87 Actual\r\n3 2022-03-01  8.54 Actual\r\n4 2022-04-01  8.26 Actual\r\n5 2022-05-01  8.58 Actual\r\n6 2022-06-01  9.06 Actual\r\n7 2022-07-01  8.52 Actual\r\n\r\nshow\r\n\r\nEXPINF1YR <- tq_get(\"EXPINF1YR\", get = \"economic.data\", from = \"2018-01-01\") %>%\r\n  summarise_by_time(\r\n    .date_var = date,\r\n    .by = \"month\",\r\n    CPI_exp_allitems_monthly = mean(price, na.rm = T)) %>%\r\n  na.omit() %>%\r\n  slice_tail() %>%\r\n  mutate(date = date + months(12)) %>%\r\n  rename(value = CPI_exp_allitems_monthly) %>%\r\n  mutate(type = \"Expected\")\r\nEXPINF1YR\r\n\r\n# A tibble: 1 × 3\r\n  date       value type    \r\n  <date>     <dbl> <chr>   \r\n1 2023-08-01  3.38 Expected\r\n\r\nshow\r\n\r\nCPI_actual_plus_exp <- bind_rows(CPIAUCNS, EXPINF1YR) %>%\r\n  mutate(value = round(value,1))\r\nCPI_actual_plus_exp\r\n\r\n# A tibble: 8 × 3\r\n  date       value type    \r\n  <date>     <dbl> <chr>   \r\n1 2022-01-01   7.5 Actual  \r\n2 2022-02-01   7.9 Actual  \r\n3 2022-03-01   8.5 Actual  \r\n4 2022-04-01   8.3 Actual  \r\n5 2022-05-01   8.6 Actual  \r\n6 2022-06-01   9.1 Actual  \r\n7 2022-07-01   8.5 Actual  \r\n8 2023-08-01   3.4 Expected\r\n\r\nshow\r\n\r\nchart <- ggplot(data = filter(CPI_actual_plus_exp, type == \"Actual\"),\r\n         aes(x = date, y = value, label = value)) +\r\n  geom_line() +\r\n  geom_point() +\r\n  geom_line(data = filter(CPI_actual_plus_exp, date >= \"2022-07-01\"),\r\n            aes(x = date, y = value), linetype = \"dashed\") +\r\n  geom_point(data = filter(CPI_actual_plus_exp, type == \"Expected\"),\r\n             aes(x = date, y = value)) +\r\n  geom_hline(yintercept = 0) +\r\n  scale_y_continuous(labels = scales::number_format(accuracy = 0.1),\r\n                     breaks = pretty_breaks(10)) +\r\n  scale_x_date(date_breaks = \"1 month\",\r\n               date_labels = \"%m-%y\") +\r\n  labs(title = \"Inflation: Actual & Expected\",\r\n       y     = \"Inflation (YoY %)\", x = \"Month\") +\r\n  theme(axis.text.x=element_text(angle=45, hjust=1, size = 8)) +\r\n  geom_text_repel(data = filter(CPI_actual_plus_exp, date >= \"2022-07-01\"))\r\nchart\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "https://github.com/ArhamChoudhury/Blog_ArhamChoudhury/blob/main/images/inflation_exp.jpg?raw=true",
    "last_modified": "2022-08-23T00:15:03-05:00",
    "input_file": "inflation.knit.md"
  },
  {
    "path": "posts/2022-08-01-nyc-pizza/",
    "title": "NYC Pizza",
    "description": "What is a Good Pizza Place for a Data Scienctist in NYC?",
    "author": [
      {
        "name": "Arham Choudhury",
        "url": "https://arhamchoudhury.com/"
      }
    ],
    "date": "2022-08-01",
    "categories": [],
    "contents": "\r\nLets say that you, a data scientist, are visiting NYC and would like\r\nto have some pizza. The sheer number of choices can be overwhelming! To\r\nnarrow things down, lets focus on pizza places that have been\r\nhighly rated by fellow data scientists.\r\nFortunately, we have the perfect data set for this!!\r\nJared Lander, the organizer of New York Open Statistical Programming\r\n(https://nyhackr.org/),\r\nhas been providing pizza and polling attendees at the regular meetups\r\nfor many years.\r\nfor an interactive look at this question, I used Jared’s pizza poll\r\ndata and built a very simple shiny web app.\r\nShiny App: https://pizzaframe.com/\r\nTop five pizza places by score\r\n(1) Patsy’s (2) Tappo (3) Williamsburg Pizza (4) Naples 45 (5) Bleeker\r\nStreet Pizza\r\n\r\n\r\n\r\nHang on a second! Aren’t polls often often skewed by low\r\nsample sizes? This is indeed something we should account for. The median\r\nnumber of votes per pizza place in this data set is 16. Lets use the\r\nslider in the shiny app to filter out any pizza place with less than 10\r\nvotes.\r\nTop 5 - filtered by 10 or more votes\r\n(1) Tappo (2) Williamsburg Pizza (3) Rocky’s (4) Fiore’s (5) Spunto\r\n\r\n\r\n\r\nOne more wrinkle! Jared has ordered pizza from some places\r\nmore than once. Maybe those are better than the rest and should be\r\nanalyzed as a separate group. This filter exists in the shiny app.\r\nTop 5 - Only Among Repeat Orders (1) Tappo (2)\r\nRocky’s (3) Fiore’s (4) Little Italy Pizza (5) Stella’s Pizza\r\n\r\n\r\n\r\nNext time you are in NYC, be sure to check out some of these pizza\r\nplaces!\r\n\r\n\r\n\r\n",
    "preview": "https://github.com/ArhamChoudhury/Blog_ArhamChoudhury/blob/main/images/Top5_overall.jpg?raw=true",
    "last_modified": "2022-08-01T22:36:16-05:00",
    "input_file": "nyc-pizza.knit.md"
  }
]
